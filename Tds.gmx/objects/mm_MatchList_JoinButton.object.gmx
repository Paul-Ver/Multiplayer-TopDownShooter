<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_but</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>mm_but</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//randomize();
global.bport = 7777;
global.bhost = network_create_server(network_socket_udp, global.bport, 20);
show_debug_message("Host" + string(global.bhost));

selectedGame = -1;
global.gamesMap = ds_map_create();

ds_map_add(global.gamesMap,"127.0.0.1","Localhost!");
/*ds_map_add(global.gamesMap,"127.0.0.2","TestServer");
ds_map_add(global.gamesMap,"127.0.0.3","TestServer");
ds_map_add(global.gamesMap,"127.0.0.4","TestServer");
ds_map_add(global.gamesMap,"127.0.0.5","TestServer");
ds_map_add(global.gamesMap,"127.0.0.6","TestServer");
ds_map_add(global.gamesMap,"127.0.0.7","TestServer");
ds_map_add(global.gamesMap,"127.0.0.8","TestServer");
ds_map_add(global.gamesMap,"127.0.0.9","TestServer");
ds_map_add(global.gamesMap,"127.0.0.10","TestServer");
ds_map_add(global.gamesMap,"127.0.0.11","TestServer");
*/
buffer = buffer_create( 1024 , buffer_fixed , 1 );

text = "Join";
image_speed = 0;

xOffset = 32;
yOffset = 224;
spacey = 30;
spacex = 400;
scroll = 0;
listSize = 8;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scroll+listSize&lt;ds_map_size(global.gamesMap)){
    scroll++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scroll&gt;0){
    scroll--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( (mouse_x &gt;= xOffset &amp;&amp; mouse_y &gt;= yOffset) &amp;&amp; (mouse_x &lt;= xOffset+spacex &amp;&amp; mouse_y &lt;= yOffset+spacey*listSize) ){
    if(selectedGame == scroll+floor((mouse_y-yOffset)/spacey)){
     script_execute(connectToServer,selectedGame);
    }
    selectedGame = scroll+floor((mouse_y-yOffset)/spacey);
    if(selectedGame&gt;=0&amp;&amp;selectedGame&lt;ds_map_size(global.gamesMap)){
        show_debug_message("Mouse clicked on: " + string(selectedGame));
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>connectToServer</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>selectedGame</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>newIp = (ds_map_find_value(async_load, "ip"));
isNew = true;

var mapSize = ds_map_size(global.gamesMap);
var iterator = ds_map_find_first(global.gamesMap);
for (var i = 0; i &lt; mapSize; i++;)
{
    if(newIp == iterator){
        //isNew=false;
        ds_map_delete(global.gamesMap,iterator);
    }
    iterator = ds_map_find_next(global.gamesMap, iterator);
}

if(isNew){
var buffer = ds_map_find_value( async_load , "buffer" );
buffer_seek( buffer , buffer_seek_start , 0 );
var serverName = buffer_read( buffer, buffer_string);
var gameMode = buffer_read( buffer, buffer_u8);
var map = buffer_read( buffer, buffer_u8);
var players = buffer_read( buffer, buffer_u8);
var maxPlayers = buffer_read( buffer, buffer_u8);
var text = (serverName + " | " + string(constant.gameTypes[gameMode]) + " | " + string(constant.maps[map]) + " | (" + string(players) + "/" + string(maxPlayers) + ")");
 ds_map_add(global.gamesMap,newIp,text);
 show_debug_message("New game found!" + string(newIp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy(global.bhost);
ds_map_destroy(global.gamesMap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x+10,y+10,string(text));

var mapSize = ds_map_size(global.gamesMap);
var iterator = ds_map_find_first(global.gamesMap);

repeat(scroll){
iterator = ds_map_find_next(global.gamesMap,iterator);
}
draw_set_alpha(0.6);
draw_rectangle(xOffset-10,yOffset-3,xOffset+spacex+3,yOffset+(spacey*listSize)+3,0);
draw_rectangle(xOffset-10,yOffset-3,xOffset+spacex+3,yOffset+(spacey*listSize)+3,1);
draw_set_alpha(1);
if(!is_undefined(iterator)){
    for (var i = 0; i &lt; listSize; i++;)
    {
        if(!is_undefined(iterator)){
            draw_set_colour(c_gray);
            draw_set_font(defaultFont);
            draw_set_alpha(0.4);
            draw_rectangle(xOffset,yOffset+(spacey*(i)),xOffset+spacex,yOffset+spacey*(i+1)-1,0);
            draw_set_alpha(1);
            if(i+scroll == selectedGame){
                draw_set_colour(c_blue);
            }else{
                draw_set_colour(c_white);
            }
            draw_text(xOffset+10,yOffset+(spacey*(i))+6,ds_map_find_value(global.gamesMap,iterator));
            draw_set_colour(c_black);
            draw_rectangle(xOffset,yOffset+(spacey*(i)),xOffset+spacex,yOffset+spacey*(i+1)-1,1);
        }
        iterator = ds_map_find_next(global.gamesMap, iterator);
    }
}

//Scroll indicators
if(mapSize-scroll &gt; listSize){
draw_triangle(xOffset-10,yOffset+(spacey*listSize)-10,xOffset,yOffset+(spacey*listSize)-10,
xOffset-5,yOffset+(spacey*listSize),0);
}
if(scroll &gt; 0){
draw_triangle(xOffset-10,yOffset+10,xOffset,yOffset+10,
xOffset-5,yOffset,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
