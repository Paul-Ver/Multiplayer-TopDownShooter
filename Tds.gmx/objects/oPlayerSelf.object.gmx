<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.name = "Test"

walkSpeed = 2;
runSpeed = 4;
crouchSpeed = 1;

accuracyMultiplier = 1;

health = 100;
maxHealth = 100;
healthRegen = 1;

stamina = 100;
maxStamina = 100;
staminaDegen = 5;
staminaRegen = 1;

guiX = 32;
guiY = 640;

ammo = 30;
maxAmmo = 30;
clips = 5;
bulletsPerSecond = 30;
fireRateCooldown = room_speed/bulletsPerSecond;
reloadTime = room_speed*5;
canShoot = true;
alarm[1]=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reload timer</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot = true;
//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clips--;
ammo=maxAmmo;
show_debug_message("Reloaded!");
canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var movementSpeed = walkSpeed;
accuracyMultiplier = 1;

if (keyboard_check(vk_shift) &amp;&amp; stamina &gt; staminaDegen){
movementSpeed = runSpeed;
stamina -= staminaDegen;
accuracyMultiplier = 0.6;
}
else if keyboard_check(vk_control){
movementSpeed = crouchSpeed;
accuracyMultiplier = 1.2;
}
if(stamina &lt; maxStamina)
    stamina += staminaRegen;
if(stamina &gt; maxStamina)
    stamina = maxStamina;

if keyboard_check(ord("W")){if place_free(x,y-movementSpeed){y-=movementSpeed}}
if keyboard_check(ord("S")){if place_free(x,y+movementSpeed){y+=movementSpeed}}
if keyboard_check(ord("A")){if place_free(x-movementSpeed,y){x-=movementSpeed}}
if keyboard_check(ord("D")){if place_free(x+movementSpeed,y){x+=movementSpeed}}

image_angle = point_direction (x,y,mouse_x,mouse_y) 

if(mouse_check_button(mb_left) &amp;&amp; canShoot){
    if(ammo&gt;=1){
        alarm[1] = fireRateCooldown;
        ammo--;
        canShoot = false;
        show_debug_message("SHOT!");
    }else{
        canShoot = false;
        if(clips&gt;=1){
            show_debug_message("Reloading?");
            alarm[0] = reloadTime;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_gray);
draw_set_font(defaultFont);
draw_rectangle(guiX-10,guiY-10,guiX+160,guiY+40,1);
draw_set_alpha(0.2);
draw_rectangle(guiX-10,guiY-10,guiX+160,guiY+40,0);

draw_set_alpha(0.5);
draw_rectangle_colour(guiX,guiY+20,guiX+maxStamina,guiY+30,c_gray,c_gray,c_gray,c_gray,0);
draw_rectangle_colour(guiX,guiY,guiX+maxHealth,guiY+10,c_gray,c_gray,c_gray,c_gray,0);
draw_set_alpha(0.7);
draw_rectangle_colour(guiX,guiY+20,guiX+stamina,guiY+30,c_white,c_white,c_white,c_white,0);
draw_rectangle_colour(guiX,guiY,guiX+health,guiY+10,c_white,c_white,c_white,c_white,0);
draw_set_alpha(0.5);
draw_text(guiX,guiY-3,"HP");
draw_text(guiX,guiY+17,"SP");
for(i = 3; i &lt; 10; i++)
draw_line(guiX+i*10,guiY,guiX+i*10+10,guiY+10)
for(i = 3; i &lt; 10; i++)
draw_line(guiX+i*10,guiY+20,guiX+i*10+10,guiY+20+10)
draw_set_colour(c_white);
draw_set_alpha(0.8);
draw_text(guiX+110,guiY-3,"" + string(ammo) + "/" + string(clips));
draw_text(guiX+110,guiY+20-3,"M4A1");
draw_set_alpha(1);
draw_set_colour(c_black);

var accuracy = 10;
var spread = (distance_to_point(mouse_x, mouse_y) / (accuracy*accuracyMultiplier));
draw_line(mouse_x-spread-5,mouse_y,mouse_x-spread,mouse_y);
draw_line(mouse_x+spread+5,mouse_y,mouse_x+spread,mouse_y);
draw_line(mouse_x,mouse_y-spread-5,mouse_x,mouse_y-spread);
draw_line(mouse_x,mouse_y+spread+5,mouse_x,mouse_y+spread);

draw_circle_colour(mouse_x,mouse_y,1,c_red,c_red,0);
//draw_point_colour(mouse_x,mouse_y,c_red);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
